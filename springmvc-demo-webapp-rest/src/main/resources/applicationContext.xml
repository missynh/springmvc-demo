<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <description>Spring公共配置</description>

    <!-- 使用annotation 自动注册bean, 并保证@Required、 @Autowired的属性被注入 -->
    <context:component-scan base-package="com.ynh">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven proxy-target-class="true"/>

    <!-- JSR303 Validator定义 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

    <context:property-placeholder ignore-unresolvable="true" ignore-resource-not-found="true"
                                  location="classpath*:/application.properties,${env.application.file}"/>

    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
        <property name="dataSourceLogEnabled" value="false" />
        <property name="connectionLogEnabled" value="false" />

        <property name="resultSetLogEnabled" value="false" />
        <property name="statementExecutableSqlLogEnable" value="true" />
        <property name="statementLogEnabled" value="false" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath:mybatis/sqlmap/*.xml"/>
        <property name="typeAliasesPackage" value="com.ynh.myproject.entity"/>
        <property name="plugins">
            <array>
                <bean class="tk.mybatis.mapper.mapperhelper.MapperInterceptor">
                    <property name="properties">
                        <value>
                            mappers=tk.mybatis.mapper.common.Mapper
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
        <property name="basePackage" value="com.ynh.myproject.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>


        <!-- 数据源配置, 使用Tomcat JDBC连接池 -->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
            <!-- Connection Info -->
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>

            <!-- 开启监控 -->
            <property name="filters" value="stat"/>

            <property name="maxActive" value="${jdbc.pool.maxActive}"/>
            <property name="initialSize" value="${jdbc.pool.initialSize}"/>
            <property name="maxWait" value="${jdbc.pool.maxWait}"/>
            <property name="minIdle" value="${jdbc.pool.minIdle}"/>

            <!-- 连接Idle半个小时后超时，每15分钟检查一次 -->
            <property name="timeBetweenEvictionRunsMillis" value="900000"/>
            <property name="minEvictableIdleTimeMillis" value="1800000"/>

            <property name="validationQuery" value="SELECT user()"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>

            <property name="poolPreparedStatements" value="true"/>
            <property name="maxOpenPreparedStatements" value="200"/>
            <property name="proxyFilters">
                <list>
                    <ref bean="log-filter"/>
                </list>
            </property>
            <property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->
            <property name="removeAbandonedTimeout" value="10" />
            <property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
        </bean>
</beans>
